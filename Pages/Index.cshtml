@* Ermöglicht den Parameter "urlDateParameter", anstatt als Parameter (?urlDateParameter=2020-06-18), als einfachen Wert (/2020-06-18) mit zu geben *@
@page "{urlDateParameter:datetime?}"
@model IndexModel
@{
	ViewData["Title"] = "Home page";
}
<style>
	body {
		background-image: url(@Model.PictureUrl);
		background-position: center;
		background-size: cover;
		opacity: 0.2;
	}

	html:hover body {
		background-blend-mode: color;
		background-color: rgba(215,215,215,0.85) !important;
		opacity: 1;
	}

	.alert { display: none; }
</style>

<div class="text-center">
	<h1 class="display-4">Welcome</h1>
	<p>@(Model.Explanation)</p>
</div>
<div class="alert alert-success text-center" role="alert"></div>
<div class="alert alert-warning text-center" role="alert"></div>
<div class="alert alert-danger text-center" role="alert"></div>
<div class="flex-container">
	@if (!Model.FavoredByCurrentUser) {
	<button class="btn btn-primary addToFavorites flex-item" type="submit">Add picture to favorites</button>
	}
	<button class="btn btn-primary showHdImage flex-item">Show HD Image</button>
</div>
@Html.AntiForgeryToken()
<input type="hidden" class="apod-id" value="@(Model.ApodId)" />

<script>
	const addToFavoritesButton = document.querySelector('.addToFavorites');
	if (addToFavoritesButton) {
		addToFavoritesButton.addEventListener('click', addToFavorites);
	}

	const apodId = document.querySelector('.apod-id').value;
	async function addToFavorites() {
		const url = '/?handler=addToFavorites';
		const response = await fetch(url, {
			method: 'POST',
			headers: {
				RequestVerificationToken: document.querySelector(
					'input[name="__RequestVerificationToken"]'
				).value,
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(apodId)
		});

		response.json().then((statusId) => {
			let alert;
			console.log(statusId);

			if (statusId === 1) {
				$('.addToFavorites').hide();
				alert = document.querySelector('.alert-success');
				alert.innerHTML = 'Picture successful added to your favorites.';
			} else if (statusId === 2) {
				alert = document.querySelector('.alert-warning');
				alert.innerHTML = 'You are not logged in.';
			} else if (statusId === 3) {
				alert = document.querySelector('.alert-danger');
				alert.innerHTML = 'Failed to add picture to favorites.';
			}

			if (alert) {
				alert.style.display = 'block';
				setTimeout(() => {
					alert.style.display = 'none';
				}, 5000);
			}
		});
	}

	const showHdImageButton = document.querySelector('.showHdImage');
	showHdImageButton.addEventListener('click', showHdImage);

	async function showHdImage() {
		const url = '/?handler=showHdImage';
		const saveHdPicture = await fetch(url, {
			method: 'POST',
			headers: {
				RequestVerificationToken: document.querySelector(
					'input[name="__RequestVerificationToken"]'
				).value,
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(apodId)
		});

		saveHdPicture
			.json()
			.then((localHdUrl) => {
				document.location = localHdUrl;
			})
			.catch((document.location = '@(Model.Apod.HdUrl)'));
	}
</script>

@* <iframe width="420" height="315" src="https://www.youtube.com/embed/UJfpqSj7cCs?rel=0" allow="autoplay; encrypted-media"
	allowfullscreen>
</iframe> *@